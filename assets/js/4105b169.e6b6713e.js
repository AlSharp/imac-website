"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[855],{4099:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>E,contentTitle:()=>_,default:()=>N,frontMatter:()=>T,metadata:()=>A,toc:()=>w});var t=r(4848),s=r(8453),o=r(6540),a=r(4164),i=r(3104),c=r(6347),l=r(205),d=r(7485),u=r(1682),m=r(679);function p(e){var n,r;return null!=(n=null==(r=o.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,o.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:r.filter(Boolean))?n:[]}function f(e){var n=e.values,r=e.children;return(0,o.useMemo)((function(){var e=null!=n?n:function(e){return p(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(r);return function(e){var n=(0,u.XI)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,r])}function v(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function h(e){var n=e.queryString,r=void 0!==n&&n,t=e.groupId,s=(0,c.W6)(),a=function(e){var n=e.queryString,r=void 0!==n&&n,t=e.groupId;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:r,groupId:t});return[(0,d.aZ)(a),(0,o.useCallback)((function(e){if(a){var n=new URLSearchParams(s.location.search);n.set(a,e),s.replace(Object.assign({},s.location,{search:n.toString()}))}}),[a,s])]}function b(e){var n,r,t,s,a=e.defaultValue,i=e.queryString,c=void 0!==i&&i,d=e.groupId,u=f(e),p=(0,o.useState)((function(){return function(e){var n,r=e.defaultValue,t=e.tabValues;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!v({value:r,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+t.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}var s=null!=(n=t.find((function(e){return e.default})))?n:t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:a,tabValues:u})})),b=p[0],g=p[1],x=h({queryString:c,groupId:d}),S=x[0],y=x[1],k=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:d}.groupId),r=(0,m.Dv)(n),t=r[0],s=r[1],[t,(0,o.useCallback)((function(e){n&&s.set(e)}),[n,s])]),C=k[0],I=k[1],j=function(){var e=null!=S?S:C;return v({value:e,tabValues:u})?e:null}();return(0,l.A)((function(){j&&g(j)}),[j]),{selectedValue:b,selectValue:(0,o.useCallback)((function(e){if(!v({value:e,tabValues:u}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),I(e)}),[y,I,u]),tabValues:u}}var g=r(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function S(e){var n=e.className,r=e.block,s=e.selectedValue,o=e.selectValue,c=e.tabValues,l=[],d=(0,i.a_)().blockElementScrollPositionUntilNextRender,u=function(e){var n=e.currentTarget,r=l.indexOf(n),t=c[r].value;t!==s&&(d(n),o(t))},m=function(e){var n,r=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":var t,s=l.indexOf(e.currentTarget)+1;r=null!=(t=l[s])?t:l[0];break;case"ArrowLeft":var o,a=l.indexOf(e.currentTarget)-1;r=null!=(o=l[a])?o:l[l.length-1]}null==(n=r)||n.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},n),children:c.map((function(e){var n=e.value,r=e.label,o=e.attributes;return(0,t.jsx)("li",Object.assign({role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:function(e){return l.push(e)},onKeyDown:m,onClick:u},o,{className:(0,a.A)("tabs__item",x.tabItem,null==o?void 0:o.className,{"tabs__item--active":s===n}),children:null!=r?r:n}),n)}))})}function y(e){var n=e.lazy,r=e.children,s=e.selectedValue,i=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){var c=i.find((function(e){return e.props.value===s}));return c?(0,o.cloneElement)(c,{className:(0,a.A)("margin-top--md",c.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:i.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==s})}))})}function k(e){var n=b(e);return(0,t.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,t.jsx)(S,Object.assign({},n,e)),(0,t.jsx)(y,Object.assign({},n,e))]})}function C(e){var n=(0,g.A)();return(0,t.jsx)(k,Object.assign({},e,{children:p(e.children)}),String(n))}const I={tabItem:"tabItem_Ymn6"};function j(e){var n=e.children,r=e.hidden,s=e.className;return(0,t.jsx)("div",{role:"tabpanel",className:(0,a.A)(I.tabItem,s),hidden:r,children:n})}const T={id:"motion-server-sample-codes",title:"Ethernet Motion Server Sample Codes",sidebar_label:"Sample Codes"},_=void 0,A={id:"motion-server-sample-codes",title:"Ethernet Motion Server Sample Codes",description:"Sending multiple ASCII commands to motor drives",source:"@site/docs/motion-server-sample-codes.md",sourceDirName:".",slug:"/motion-server-sample-codes",permalink:"/docs/motion-server-sample-codes",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"AlSharp",lastUpdatedAt:1727058275e3,frontMatter:{id:"motion-server-sample-codes",title:"Ethernet Motion Server Sample Codes",sidebar_label:"Sample Codes"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/motion-server-getting-started"}},E={},w=[{value:"Sending multiple ASCII commands to motor drives",id:"sending-multiple-ascii-commands-to-motor-drives",level:2}];function P(e){const n={code:"code",h2:"h2",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"sending-multiple-ascii-commands-to-motor-drives",children:"Sending multiple ASCII commands to motor drives"}),"\n",(0,t.jsxs)(C,{children:[(0,t.jsx)(j,{value:"py",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"import socket\n\ndef main():\n    host = '10.1.10.65'\n    port = 5000\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.connect((host, port))\n    commands = [\n      's r0x70 2 0',\n      's r0xc8 256',\n      's r0xca 200000',\n      's r0xcb 1000000',\n      's r0xcc 2000000',\n      's r0xcd 2000000',\n      's r0x24 31',\n      't 1'\n    ]\n    for command in commands:\n      sock.send(bytes('{0}\\r'.format(command), encoding=\"utf-8\"))\n      data = sock.recv(1024)\n      print('{}: {}'.format(command, data.decode('ascii')))\n\n    sock.close()\n\nmain()\n"})})}),(0,t.jsx)(j,{value:"js",label:"JavaScript",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const net = require('net')\n\nconst socket = net.createConnection(5000, '10.1.10.65');\n\nconst commands = [\n  's r0x70 2 0',\n  's r0xc8 256',\n  's r0xca 200000',\n  's r0xcb 1000000',\n  's r0xcc 2000000',\n  's r0xcd 2000000',\n  's r0x24 31',\n  't 1'\n]\n\nconst writeOne = command => new Promise((resolve, reject) => {\n  let timeout;\n  let errorHandler, responseHandler;\n  errorHandler = error => {\n    socket.removeListener('data', responseHandler);\n    reject(error);\n    return;\n  }\n  responseHandler = res => {\n    socket.removeListener('error', errorHandler);\n    let response = res.toString('utf8');\n    console.log(`${command}: ${response}`);\n    clearTimeout(timeout);\n    if (response.slice(0, 1) === 'v') {\n      resolve(response.slice(2));\n      return;\n    } else if (response.slice(0, 1) === 'e') {\n      reject(response);\n      return;\n    } else {\n      resolve(response);\n      return;\n    }\n  }\n  timeout = setTimeout(() => {\n    socket.removeListener('data', responseHandler);\n    socket.removeListener('error', errorHandler);\n    reject('WRITE TIMEOUT');\n    return;\n  }, 300);\n  socket.write(command + '\\r', 'ascii');\n  socket.once('error', errorHandler);\n  socket.once('data', responseHandler);\n})\n\nconst run = async commands => {\n  for (let i = 0; i < commands.length; i++) {\n    await writeOne(commands[i]);\n  }\n}\n\nrun(commands)\n  .then(() => {\n    socket.end();\n  })\n  .catch(error => {\n    console.log('CATCH ERROR: ', error);\n    socket.end();\n  })\n"})})}),(0,t.jsx)(j,{value:"c",label:"C",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-C",children:'#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n\n#include <sys/socket.h>\n#include <sys/types.h>\n\n#include <netinet/in.h>\n#include <arpa/inet.h>\n\n#define PORT 5000\n#define IP_ADDR "10.1.10.65"\n\nint main() {\n  // create a socket\n  int client, ret;\n\n  struct sockaddr_in server_addr;\n\n  client = socket(AF_INET, SOCK_STREAM, 0);\n\n  memset(&server_addr, \'\\0\', sizeof(server_addr));\n\n  server_addr.sin_family = AF_INET;\n  server_addr.sin_port = htons(PORT);\n  server_addr.sin_addr.s_addr = inet_addr(IP_ADDR);\n\n  ret = connect(client, (struct sockaddr*) &server_addr, sizeof(server_addr));\n  if (ret < 0) {\n    printf("Connection failed, code %d\\n", ret);\n    return ret;\n  }\n\n  char commands[][256] = {\n    "s r0x70 2 0",\n    "s r0xc8 256",\n    "s r0xca -200000",\n    "s r0xcb 1000000",\n    "s r0xcc 2000000",\n    "s r0xcd 2000000",\n    "s r0x24 31",\n    "t 1"\n  };\n\n  size_t i;\n  for (i = 0; i < sizeof(commands) / sizeof(commands[0]); i++) {\n    printf("%s: ", commands[i]);\n    strcat(commands[i], "\\r");\n    size_t len = strlen(commands[i]);\n    char * shorten_command = (char *) malloc(len);\n    memcpy(shorten_command, commands[i], len);\n    ret = send(client, shorten_command, len, 0);\n    if (ret < 0) {\n      printf("failed, code %d\\n", ret);\n      return ret;\n    }\n\n    char response[256];\n    ret = recv(client, &response, sizeof(response), 0);\n    if (ret < 0) {\n      printf("failed, code %d\\n", ret);\n      return ret;\n    }\n    printf("%s\\n", response);\n  }\n\n  ret = close(client);\n  if (ret < 0) {\n    printf("Disconnection failed, code %d\\n", ret);\n    return ret;\n  }\n\n  return 0;\n}\n'})})}),(0,t.jsx)(j,{value:"csharp",label:"C#",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CNET",children:'using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Net;\nusing System.Net.Sockets;\n\nnamespace TCPSocketClient\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string ipAddrString = "10.1.10.65";\n            int port = 5000;\n            IPAddress ipAddr = IPAddress.Parse(ipAddrString);\n            IPEndPoint imacETHEndPoint = new IPEndPoint(ipAddr, port);\n\n            Socket client = new Socket(\n                ipAddr.AddressFamily,\n                SocketType.Stream,\n                ProtocolType.Tcp\n            );\n\n            client.Connect(imacETHEndPoint);\n\n            Console.WriteLine("Connected to {0}", client.RemoteEndPoint.ToString());\n\n            string[] commands = new string[]\n            {\n                "s r0x70 2 0",\n                "s r0xc8 256",\n                "s r0xca -200000",\n                "s r0xcb 1000000",\n                "s r0xcc 2000000",\n                "s r0xcd 2000000",\n                "s r0x24 31",\n                "t 1"\n            };\n\n            for (int i = 0; i < commands.Length; i++)\n            {\n                byte[] command = Encoding.ASCII.GetBytes(commands[i] + "\\r");\n                int byteSent = client.Send(command);\n\n                byte[] response = new byte[512];\n                int byteRecv = client.Receive(response);\n\n                Console.WriteLine(\n                    "{0}: {1}",\n                    commands[i],\n                    Encoding.ASCII.GetString(response, 0, byteRecv)\n                );\n            }\n\n            client.Shutdown(SocketShutdown.Both);\n            client.Close();\n\n            Console.Write("Press any key to exit");\n            Console.ReadLine();\n        }\n    }\n}\n'})})})]})]})}function N(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(P,{...e})}):P(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);